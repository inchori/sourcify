# Server config

###########################
### Public env variables ##
###########################
IPFS_GATEWAY=https://ipfs.io/ipfs/
# Pass additional headers to the request (e.g. { 'x-authentication': 'token' } )
IPFS_GATEWAY_HEADERS=

# Won't save files in IPFS MFS if empty
IPFS_API=

# Set to "production" for production builds and "development" for local development.
NODE_ENV=
# Used to set the config file to use. See src/config. Default sourcify uses "master" and "staging".
NODE_CONFIG_ENV=
# Overrides the log level. Normally, if NODE_ENV production set to "info", otherwise "debug". Values can be silly, debug, info, warn, error
NODE_LOG_LEVEL=

###########################
## Private env variables ##
###########################

# Sourcify's database postgres connection
SOURCIFY_POSTGRES_HOST=""
SOURCIFY_POSTGRES_DB=""
SOURCIFY_POSTGRES_USER=""
SOURCIFY_POSTGRES_PASSWORD=""
SOURCIFY_POSTGRES_PORT=5432
# SOURCIFY_POSTGRES_SCHEMA=custom-schema # by default "public" is used

# Verifier Alliance database postgres connection
# ALLIANCE_POSTGRES_HOST=
# ALLIANCE_POSTGRES_DB=
# ALLIANCE_POSTGRES_USER=
# ALLIANCE_POSTGRES_PASSWORD=
# ALLIANCE_POSTGRES_PORT=
# # ALLIANCE_POSTGRES_SCHEMA=custom-schema # by default "public" is used

# Simple authentication token for the /change-log-level endpoint
SETLOGGING_TOKEN=

# UI session secret
SESSION_SECRET=CHANGE_ME

# Ethereum JSON-RPC Providers
# Infura needed for Palm Network
INFURA_API_KEY=
# Alchemy used for Arbitrum, Optimism, Polygon, and fallback for Ethereum. See sourcify-chains.ts
ALCHEMY_API_KEY=
QUICKNODE_API_KEY=
# If you are using different subdomains (endpoints) for different enviroments (staging, production, etc)
QUICKNODE_SUBDOMAIN=
# Optional, if not set will use ALCHEMY_API_KEY
ALCHEMY_API_KEY_OPTIMISM=
# Optional, if not set will use ALCHEMY_API_KEY
ALCHEMY_API_KEY_ARBITRUM=

# Optional, Needed for the Import from Etherscan functionality for each Etherscan instance
ETHERSCAN_API_KEY=
ARBISCAN_API_KEY=
ARBISCAN_NOVA_API_KEY=
POLYGONSCAN_API_KEY=
ZKEVM_POLYGONSCAN_API_KEY=
BSCSCAN_API_KEY=
CELOSCAN_API_KEY=
MOONSCAN_MOONBEAM_API_KEY=
MOONSCAN_MOONRIVER_API_KEY=
GNOSISSCAN_API_KEY=
OPTIMISMSCAN_API_KEY=
CRONOSCAN_API_KEY=
BASESCAN_API_KEY=
COREDAO_API_KEY=
COREDAO_TESTNET_API_KEY=
SCROLLSCAN_API_KEY=
FRAXSCAN_API_KEY=
SNOWSCAN_API_KEY=
MANTLESCAN_API_KEY=
LINEASCAN_API_KEY=

# Authentication for ethpandaops nodes
CF_ACCESS_CLIENT_ID=
CF_ACCESS_CLIENT_SECRET=

# Authentication for running compilations on lambda functions.
AWS_REGION=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# Optional, project id for Google Cloud, used for log tracing.
GOOGLE_CLOUD_PROJECT=

# Optional, S3 configuration for RepositoryS3Service
S3_BUCKET=
S3_REGION=
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=
S3_ENDPOINT=
